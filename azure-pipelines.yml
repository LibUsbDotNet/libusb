jobs:
- job: windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: MSBuild@1
    inputs:
      solution: 'msvc\libusb_dll_2017.vcxproj' 
      platform: Win32
      configuration: Release
    displayName: 'Build libusb-1.0.dll (32-bit)'

  - task: MSBuild@1
    inputs:
      solution: 'msvc\libusb_dll_2017.vcxproj' 
      platform: x64
      configuration: Release
    displayName: 'Build libusb-1.0.dll (64-bit)'

  - script: |
      mkdir %BUILD_ARTIFACTSTAGINGDIRECTORY%\runtimes\win-x86\native
      copy Win32\Release\dll\libusb-1.0.dll %BUILD_ARTIFACTSTAGINGDIRECTORY%\runtimes\win-x86\native
      copy Win32\Release\dll\libusb-1.0.pdb %BUILD_ARTIFACTSTAGINGDIRECTORY%\runtimes\win-x86\native
      mkdir %BUILD_ARTIFACTSTAGINGDIRECTORY%\runtimes\win-x64\native
      copy x64\Release\dll\libusb-1.0.dll %BUILD_ARTIFACTSTAGINGDIRECTORY%\runtimes\win-x64\native
      copy x64\Release\dll\libusb-1.0.pdb %BUILD_ARTIFACTSTAGINGDIRECTORY%\runtimes\win-x64\native
    displayName: 'Copy artifacts'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'drop' 
      publishLocation: 'Container'
    displayName: 'Publish libusb-1.0.dll artifacts'

- job: macos
  pool:
    vmImage: 'xcode9-macos10.13'
  steps:
  - script: |
      brew install autoconf automake libtool pkg-config libusb libzip
    displayName: 'Install autotools'

  - script: |
      ./autogen.sh && make clean && make
      cd Xcode && xcodebuild -project libusb.xcodeproj
    displayName: 'Build libusb-1.0.dylib'

  - script: |
      mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY/runtimes/osx-x64/native
      cp Xcode/build/Release/libusb-1.0.0.dylib $BUILD_ARTIFACTSTAGINGDIRECTORY/runtimes/osx-x64/native
    displayName: 'Copy artifacts'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'drop' 
      publishLocation: 'Container'
    displayName: 'Publish libusb-1.0.0.dylib artifacts'